(self["webpackChunktemplate_assets"] = self["webpackChunktemplate_assets"] || []).push([["node_modules_moment_locale_sync_recursive_-src_www_pages_create-nft_index_jsx"],{

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn-bd": "./node_modules/moment/locale/bn-bd.js",
	"./bn-bd.js": "./node_modules/moment/locale/bn-bd.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-in": "./node_modules/moment/locale/en-in.js",
	"./en-in.js": "./node_modules/moment/locale/en-in.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./en-sg": "./node_modules/moment/locale/en-sg.js",
	"./en-sg.js": "./node_modules/moment/locale/en-sg.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-mx": "./node_modules/moment/locale/es-mx.js",
	"./es-mx.js": "./node_modules/moment/locale/es-mx.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fil": "./node_modules/moment/locale/fil.js",
	"./fil.js": "./node_modules/moment/locale/fil.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-deva": "./node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "./node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./oc-lnc": "./node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "./node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tk": "./node_modules/moment/locale/tk.js",
	"./tk.js": "./node_modules/moment/locale/tk.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "./node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "./node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./src/www/pages/create-nft/index.jsx":
/*!********************************************!*\
  !*** ./src/www/pages/create-nft/index.jsx ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const react_1 = __importDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
const create_nft_elements_1 = __webpack_require__(/*! ./create-nft.elements */ "./src/www/pages/create-nft/create-nft.elements.js");
const antd_1 = __webpack_require__(/*! antd */ "./node_modules/antd/es/index.js");
const icons_1 = __webpack_require__(/*! @ant-design/icons */ "./node_modules/@ant-design/icons/es/index.js");
const react_2 = __webpack_require__(/*! react */ "./node_modules/react/index.js");
const ipfs_1 = __webpack_require__(/*! ../../utilities/ipfs */ "./src/www/utilities/ipfs.js");
const principal_1 = __webpack_require__(/*! @dfinity/principal */ "./node_modules/@dfinity/principal/lib/esm/index.js");
const custom_axios_1 = __webpack_require__(/*! ../../utils/custom-axios */ "./src/www/utils/custom-axios.js");
const react_toastify_1 = __webpack_require__(/*! react-toastify */ "./node_modules/react-toastify/dist/react-toastify.esm.js");
const hooks_1 = __webpack_require__(/*! ../../hooks */ "./src/www/hooks/index.jsx");
const themes_1 = __webpack_require__(/*! ../../assets/themes */ "./src/www/assets/themes/index.js");
const { Dragger } = antd_1.Upload;
const { Option } = antd_1.Select;
const react_3 = __webpack_require__(/*! @connect2ic/react */ "./node_modules/@connect2ic/react/dist/connect2ic-react.esm.js");
const IPFS_LINK = 'https://dweb.link/ipfs/';
function CreateNft(props) {
    const { isConnected, disconnect, activeProvider, isIdle, connect, isConnecting, principal, } = (0, react_3.useConnect)();
    const [fileImg, setFileImg] = (0, react_2.useState)(true);
    const [listNFt, setListNFt] = (0, react_2.useState)([]);
    const [listAllNFt, setListAllNFt] = (0, react_2.useState)([]);
    const [superheroes, { loading, error }] = (0, react_3.useCanister)('superheroes');
    function onChange(value) {
        console.log(`selected ${value}`);
    }
    function onSearch(val) {
        console.log('search:', val);
    }
    const onChangeFile = async (info) => {
        const { status } = info.file;
        console.log(info);
        antd_1.message.success(`${info.file.name} file uploaded successfully.`);
        return info.file;
    };
    const requestUpdate = async (info) => {
        const resImg = await onChangeFile(info);
        setFileImg(resImg);
        info.onSuccess('okk');
    };
    const getBase64 = (file) => new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = (error) => reject(error);
    });
    (0, react_2.useEffect)(async () => {
        if (principal && superheroes) {
            getLIst();
        }
    }, [principal, superheroes]);
    const getListAll = async () => {
        console.log('SUPERHEROES_CANISTER_ID', "fij5p-siaaa-aaaai-acata-cai");
        const res = await superheroes.getAllTokens();
        console.log(res);
        const promise4all = Promise.all(res.map(function (el) {
            var _a;
            return (0, custom_axios_1.customAxios)((_a = el.metadata[0]) === null || _a === void 0 ? void 0 : _a.tokenUri);
        }));
        const resu = await promise4all;
        console.log(resu);
        setListAllNFt(resu);
    };
    const onFinish = async (values) => {
        var _a, _b;
        console.log(values);
        (0, react_toastify_1.toast)('Minting NFT!!!');
        const cid = await ipfs_1.client.put([fileImg]);
        const nFile = new File([
            JSON.stringify({
                description: values === null || values === void 0 ? void 0 : values.description,
                name: values === null || values === void 0 ? void 0 : values.name,
                image: `${IPFS_LINK}${cid}/${(_b = (_a = values === null || values === void 0 ? void 0 : values.image) === null || _a === void 0 ? void 0 : _a.file) === null || _b === void 0 ? void 0 : _b.name}`,
            }),
        ], `${values === null || values === void 0 ? void 0 : values.name}.json`, { type: 'text/plain' });
        const metadataCID = await ipfs_1.client.put([nFile]);
        const res = await superheroes.mint(principal_1.Principal.fromText(principal), [
            { tokenUri: `${IPFS_LINK}${metadataCID}/${values === null || values === void 0 ? void 0 : values.name}.json` },
        ]);
        console.log('==== mint ', res);
        (0, react_toastify_1.toast)('Minted NFT success!!!');
        getLIst();
        getListAll();
    };
    const onFinishFailed = (errorInfo) => {
        console.log('Failed:', errorInfo);
    };
    const getLIst = async () => {
        const res = await superheroes.getUserTokens(principal_1.Principal.fromText(principal));
        const promise4all = Promise.all(res.map(function (el) {
            var _a;
            return (0, custom_axios_1.customAxios)((_a = el.metadata[0]) === null || _a === void 0 ? void 0 : _a.tokenUri);
        }));
        const resu = await promise4all;
        setListNFt(resu);
    };
    // upload image
    const [previewVisible, setPreviewVisible] = (0, react_2.useState)(false);
    const [previewImage, setPreviewImage] = (0, react_2.useState)('');
    const [previewTitle, setPreviewTitle] = (0, react_2.useState)('');
    const [fileList, setFileList] = (0, react_2.useState)([]);
    const handleCancel = () => setPreviewVisible(false);
    const handlePreview = async (file) => {
        if (!file.url && !file.preview) {
            file.preview = await getBase64(file.originFileObj);
        }
        console.log('=====> ', file.preview);
        setPreviewImage(file.url || file.preview);
        setPreviewVisible(true);
        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));
    };
    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);
    const uploadButton = (react_1.default.createElement("div", null,
        react_1.default.createElement(icons_1.PlusOutlined, null),
        react_1.default.createElement("div", { style: {
                marginTop: 8,
            } }, "Upload image")));
    return (react_1.default.createElement(create_nft_elements_1.Container, { style: { backgroundColor: themes_1.themes.colors.background, paddingTop: 50 } },
        react_1.default.createElement(create_nft_elements_1.Wrapper, { style: {
                backgroundColor: themes_1.themes.colors.background_box,
                borderRadius: 15,
                margin: 'auto',
                width: '30%',
                padding: 20,
                marginTop: 20,
            } },
            react_1.default.createElement("div", { style: { fontSize: 20, color: 'white', fontWeight: 'bold' } }, "User manual"),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 1"),
                react_1.default.createElement("div", { style: { color: 'white' } }, "Upload image: Here is a photo of an NFT certified person.")),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 2"),
                react_1.default.createElement("div", { style: { color: 'white' } }, "Enter degree name: this is name of degree.")),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 3"),
                react_1.default.createElement("div", { style: { color: 'white' } }, "Enter degree description: Provide all information about degree.")),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 4"),
                react_1.default.createElement("div", { style: { color: 'white' } },
                    "Paste public key: This is the wallet address of the nft recipient, after the image is minted.",
                    '',
                    react_1.default.createElement("a", { style: { color: 'blueviolet' }, href: 'https://plugwallet.ooo/' },
                        ' ',
                        "How to create a wallet"))),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 5"),
                react_1.default.createElement("div", { style: { color: 'white' } }, "Choose degree category: this is category of degree")),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 6"),
                react_1.default.createElement("div", { style: { color: 'white' } }, "Choose degree chool: Graduate diploma certification facility")),
            react_1.default.createElement("div", { style: {
                    backgroundColor: themes_1.themes.colors.background,
                    borderRadius: 10,
                    padding: 10,
                    marginTop: 20,
                } },
                react_1.default.createElement("div", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, "Step 7"),
                react_1.default.createElement("div", { style: { color: 'white' } }, "Choose degree's gpa: Student's GPA"))),
        react_1.default.createElement(create_nft_elements_1.Wrapper, { style: {
                backgroundColor: themes_1.themes.colors.background_box,
                borderRadius: 15,
                margin: 'auto',
                width: '50%',
                padding: 20,
                marginBottom: 50,
            } },
            react_1.default.createElement(create_nft_elements_1.Title, { style: { color: 'white' } }, "Create Dgree NFT"),
            react_1.default.createElement(create_nft_elements_1.Required, { style: { color: 'white' } },
                react_1.default.createElement(create_nft_elements_1.RedIcon, { style: { color: 'white' } }, "*"),
                " Required fields"),
            react_1.default.createElement(create_nft_elements_1.BodyWrapper, null,
                react_1.default.createElement(antd_1.Form, { name: 'basic', onFinish: onFinish, onFinishFailed: onFinishFailed, autoComplete: 'off' },
                    react_1.default.createElement(create_nft_elements_1.FormWrapper, null,
                        react_1.default.createElement(create_nft_elements_1.FormItem, null,
                            react_1.default.createElement(antd_1.Form.Item, null,
                                react_1.default.createElement(antd_1.Upload, { action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76', listType: 'picture-card', fileList: fileList, onPreview: handlePreview, onChange: handleChange, style: {
                                        flexDirection: 'row',
                                        justifyItems: 'center',
                                        display: 'flex',
                                    } }, fileList.length >= 8 ? null : uploadButton),
                                react_1.default.createElement(antd_1.Modal, { visible: previewVisible, title: previewTitle, footer: null, onCancel: handleCancel, style: { width: 700, height: 400 } },
                                    react_1.default.createElement("img", { alt: 'example', style: {
                                            width: '100%',
                                            height: '100%',
                                        }, src: previewImage })))),
                        react_1.default.createElement("div", { style: { color: 'white', fontSize: 14 } }, "Name degree"),
                        react_1.default.createElement(antd_1.Form.Item, { name: 'name', rules: [{ required: true, message: 'Please input NFT name!' }] },
                            react_1.default.createElement(antd_1.Input, { width: '100%', size: 'large', placeholder: 'Name of degree' })),
                        react_1.default.createElement("div", { style: { color: 'white', fontSize: 14 } }, "Description"),
                        react_1.default.createElement(antd_1.Form.Item, { name: 'description' },
                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Provide a detailed description of degree' })),
                        react_1.default.createElement("div", { style: { color: 'white', fontSize: 14 } }, "Adress wallet"),
                        react_1.default.createElement(antd_1.Form.Item, { name: 'address' },
                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Pass address wallet' })),
                        react_1.default.createElement("div", { style: {
                                display: 'flex',
                                flexDirection: 'row',
                                justifyContent: 'space-between',
                            } },
                            react_1.default.createElement(antd_1.Select, { defaultValue: 'Category', size: 'large', style: { width: 200, marginBottom: 20, borderRadius: 10 } },
                                react_1.default.createElement(Option, { value: '1' }, "Diploma"),
                                react_1.default.createElement(Option, { value: '2' }, "Certificate"),
                                react_1.default.createElement(Option, { value: '3' }, "Merit")),
                            react_1.default.createElement(antd_1.Select, { defaultValue: 'School', size: 'large', style: { width: 200, marginBottom: 20, borderRadius: 10 } },
                                react_1.default.createElement(Option, { value: '1' }, "FPT Polytechnic"),
                                react_1.default.createElement(Option, { value: '2' }, "FPT University"),
                                react_1.default.createElement(Option, { value: '3' }, "Uni of Greenwich"))),
                        react_1.default.createElement("div", { style: { color: 'white', fontSize: 14 } }, "Enter GPA"),
                        react_1.default.createElement(antd_1.Form.Item, { name: 'gpa' },
                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Enter GPA' })),
                        react_1.default.createElement(create_nft_elements_1.FormItem, null,
                            react_1.default.createElement(antd_1.Form.Item, null,
                                react_1.default.createElement(antd_1.Button, { type: 'primary', htmlType: 'submit', size: 'large', style: { width: 200, marginTop: 20 } }, "Submit")))))))));
}
exports["default"] = (0, hooks_1.withContext)(CreateNft);


/***/ }),

/***/ "./src/www/assets/themes/index.js":
/*!****************************************!*\
  !*** ./src/www/assets/themes/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "themes": () => (/* binding */ themes)
/* harmony export */ });
const themes = {
    colors: {
        background: '#24252d',
        background_box: '#1b1a21',
    }
}

/***/ }),

/***/ "./src/www/pages/create-nft/create-nft.elements.js":
/*!*********************************************************!*\
  !*** ./src/www/pages/create-nft/create-nft.elements.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Container": () => (/* binding */ Container),
/* harmony export */   "Wrapper": () => (/* binding */ Wrapper),
/* harmony export */   "Title": () => (/* binding */ Title),
/* harmony export */   "Required": () => (/* binding */ Required),
/* harmony export */   "FormWrapper": () => (/* binding */ FormWrapper),
/* harmony export */   "RedIcon": () => (/* binding */ RedIcon),
/* harmony export */   "BodyWrapper": () => (/* binding */ BodyWrapper),
/* harmony export */   "FormItem": () => (/* binding */ FormItem),
/* harmony export */   "FormItemName": () => (/* binding */ FormItemName),
/* harmony export */   "FormItemDesc": () => (/* binding */ FormItemDesc)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");


const Container = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    display: flex;
    align-items: center;
    justify-content: center;
`

const Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    display: flex;
    flex-direction: column;
`

const Title = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    font-size: 40px;
    font-weight: bold;
    margin-bottom: 20px;
`

const Required = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    font-size: 14px;
    margin-bottom: 20px;
`

const FormWrapper = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    display: flex;
    flex-direction: column;
`

const RedIcon = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].span`
    color: red;
`

const BodyWrapper = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    display: flex;
    flex-direction: column;
`

const FormItem = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    margin: auto;
`

const FormItemName = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    font-size: 16px;
    font-weight: bold;
`

const FormItemDesc = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    font-size: 14px;
    margin-bottom: 10px;
`

/***/ }),

/***/ "./src/www/utilities/ipfs.js":
/*!***********************************!*\
  !*** ./src/www/utilities/ipfs.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "client": () => (/* binding */ client),
/* harmony export */   "retrieveImageFromIPFS": () => (/* binding */ retrieveImageFromIPFS),
/* harmony export */   "retrieveImageFromWeb3Storage": () => (/* binding */ retrieveImageFromWeb3Storage)
/* harmony export */ });
/* harmony import */ var web3_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3.storage */ "./node_modules/web3.storage/src/lib.js");
/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js");



const client = new web3_storage__WEBPACK_IMPORTED_MODULE_0__.Web3Storage({
  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDFiMWQwMjgwZEZFNGIwMTBmOEIzY2JGRDA2MzM3QWY3Nzc4OTAzMUYiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NTg5NDA4OTIwNDQsIm5hbWUiOiJXSU5ORVIifQ.nhIfHmMN-DMOL9IyKPjs__vxBIlxtPKYxPOB8PpVUxs",
});

const retrieveImageFromIPFS = async (cid, imageName) => {
  const res = await fetch(`https://${cid}.ipfs.dweb.link/${imageName}`);
  const imageBlob = await res.blob();
  const imageFromWeb3 = URL.createObjectURL(imageBlob);
  return imageFromWeb3;
};

const retrieveImageFromWeb3Storage = async (cid) => {
  let res = await client.get(`${cid}`);
  if (!res?.ok) {
    throw new Error(
      `failed to get ${cid} - [${res?.status}] ${res?.statusText}`
    );
  }
  const file = await res?.files();
  const bufferArray = await file[0].arrayBuffer();
  return "data:image/png;base64," + buffer__WEBPACK_IMPORTED_MODULE_1__.Buffer.from(bufferArray).toString("base64");
};

/***/ }),

/***/ "./src/www/utils/custom-axios.js":
/*!***************************************!*\
  !*** ./src/www/utils/custom-axios.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "customAxios": () => (/* binding */ customAxios)
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);


let totalNoInternetRequest = 0;

const customAxios = axios__WEBPACK_IMPORTED_MODULE_0___default().create();


// Request interceptor for API calls
customAxios.interceptors.request.use(
    async config => {
        return config; 
    },
    error => {
        Promise.reject(error)
    }
);

customAxios.interceptors.response.use(
    (response) => {
        return response?.data;
    },
    (error) => {
        const response = {
            code: 0,
            data: error?.response?.data,
        };
        
        throw response;
    }
);




/***/ })

}]);
//# sourceMappingURL=node_modules_moment_locale_sync_recursive_-src_www_pages_create-nft_index_jsx.index.js.map