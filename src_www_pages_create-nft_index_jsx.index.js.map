{"version":3,"file":"src_www_pages_create-nft_index_jsx.index.js","mappings":"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","sources":["webpack://template_assets/./src/www/pages/create-nft/index.jsx","webpack://template_assets/./src/www/pages/create-nft/create-nft.elements.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst create_nft_elements_1 = require(\"./create-nft.elements\");\nconst antd_1 = require(\"antd\");\nconst icons_1 = require(\"@ant-design/icons\");\nconst react_1 = __importStar(require(\"react\"));\nconst ipfs_1 = require(\"../../utilities/ipfs\");\nconst principal_1 = require(\"@dfinity/principal\");\nconst custom_axios_1 = require(\"../../utils/custom-axios\");\nconst react_toastify_1 = require(\"react-toastify\");\nconst hooks_1 = require(\"../../hooks\");\nconst themes_1 = require(\"../../assets/themes\");\nconst nft_storage_1 = require(\"nft.storage\");\nconst { Dragger } = antd_1.Upload;\nconst { Option } = antd_1.Select;\nconst react_2 = require(\"@connect2ic/react\");\nconst IPFS_LINK = 'https://dweb.link/ipfs/';\nfunction CreateNft(props) {\n    const { isConnected, disconnect, activeProvider, isIdle, connect, isConnecting, principal, } = (0, react_2.useConnect)();\n    const [fileImg, setFileImg] = (0, react_1.useState)('');\n    const [listNFt, setListNFt] = (0, react_1.useState)([]);\n    const [listAllNFt, setListAllNFt] = (0, react_1.useState)([]);\n    const [superheroes, { loading, error }] = (0, react_2.useCanister)('superheroes');\n    // upload image\n    const [previewVisible, setPreviewVisible] = (0, react_1.useState)(false);\n    const [previewImage, setPreviewImage] = (0, react_1.useState)('');\n    const [previewTitle, setPreviewTitle] = (0, react_1.useState)('');\n    const [fileList, setFileList] = (0, react_1.useState)([]);\n    // when image upload\n    (0, react_1.useEffect)(() => {\n        if (fileImg[0]) {\n            requestUpdate();\n        }\n    }, [fileImg]);\n    const requestUpdate = () => {\n        const resImg = fileList[0].thumbUrl;\n        setFileImg(resImg);\n    };\n    const getBase64 = (file) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n    });\n    (0, react_1.useEffect)(async () => {\n        if (principal && superheroes) {\n            getLIst();\n        }\n    }, [principal, superheroes]);\n    const getListAll = async () => {\n        console.log('SUPERHEROES_CANISTER_ID', process.env.SUPERHEROES_CANISTER_ID);\n        const res = await superheroes.getAllTokens();\n        console.log(res);\n        const promise4all = Promise.all(res.map(function (el) {\n            var _a;\n            return (0, custom_axios_1.customAxios)((_a = el.metadata[0]) === null || _a === void 0 ? void 0 : _a.tokenUri);\n        }));\n        const resu = await promise4all;\n        console.log(resu);\n        setListAllNFt(resu);\n    };\n    const onFinish = async (values) => {\n        (0, react_toastify_1.toast)('Minting NFT!!!');\n        const cid = await ipfs_1.client.put([fileList[0].originFileObj]);\n        console.log('===> cid ', cid);\n        const nFile = new nft_storage_1.File([\n            JSON.stringify({\n                description: values === null || values === void 0 ? void 0 : values.description,\n                name: values === null || values === void 0 ? void 0 : values.name,\n                category: values === null || values === void 0 ? void 0 : values.category,\n                school: values === null || values === void 0 ? void 0 : values.school,\n                gpa: values === null || values === void 0 ? void 0 : values.gpa,\n                chairman: values === null || values === void 0 ? void 0 : values.chairman,\n                image: `${IPFS_LINK}${cid}/${fileList[0].originFileObj.name}`,\n                timeCreate: Date.now(),\n            }),\n        ], `${values === null || values === void 0 ? void 0 : values.name}.json`, { type: 'text/plain' });\n        const metadataCID = await ipfs_1.client.put([nFile]);\n        console.log('===> metadataCID ', metadataCID);\n        const res = await superheroes.mint(principal_1.Principal.fromText(values === null || values === void 0 ? void 0 : values.address), [\n            { tokenUri: `${IPFS_LINK}${metadataCID}/${values === null || values === void 0 ? void 0 : values.name}.json` },\n        ]);\n        console.log('==== mint ', res);\n        (0, react_toastify_1.toast)('Minted NFT success!!!');\n        getLIst();\n    };\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n    const getLIst = async () => {\n        const res = await superheroes.getUserTokens(principal_1.Principal.fromText(principal));\n        const promise4all = Promise.all(res.map(function (el) {\n            var _a;\n            return (0, custom_axios_1.customAxios)((_a = el.metadata[0]) === null || _a === void 0 ? void 0 : _a.tokenUri);\n        }));\n        const resu = await promise4all;\n        console.log('getList ', resu);\n        setListNFt(resu);\n    };\n    const handleCancel = () => setPreviewVisible(false);\n    const handlePreview = async (file) => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewImage(file.url || file.preview);\n        setPreviewVisible(true);\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n    };\n    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\n    const uploadButton = (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(icons_1.PlusOutlined, null),\n        react_1.default.createElement(\"div\", { style: {\n                marginTop: 8,\n            } }, \"Upload image\")));\n    return (react_1.default.createElement(create_nft_elements_1.Container, { style: { backgroundColor: themes_1.themes.colors.background, paddingTop: 50 } },\n        react_1.default.createElement(create_nft_elements_1.Wrapper, { style: {\n                backgroundColor: themes_1.themes.colors.background_box,\n                borderRadius: 15,\n                margin: 'auto',\n                width: '30%',\n                padding: 20,\n                marginTop: 20,\n            } },\n            react_1.default.createElement(\"div\", { style: { fontSize: 20, color: 'white', fontWeight: 'bold' } }, \"User manual\"),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 1\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Upload image: Here is a photo of an NFT certified person.\")),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 2\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Enter degree name: this is name of degree.\")),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 3\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Enter degree description: Provide all information about degree.\")),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 4\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } },\n                    \"Paste public key: This is the wallet address of the nft recipient, after the image is minted.\",\n                    '',\n                    react_1.default.createElement(\"a\", { style: { color: 'blueviolet' }, href: 'https://plugwallet.ooo/' },\n                        ' ',\n                        \"How to create a wallet\"))),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 5\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Choose degree category: this is category of degree\")),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 6\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Choose degree chool: Graduate diploma certification facility\")),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 7\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Choose degree's gpa: Student's GPA\")),\n            react_1.default.createElement(\"div\", { style: {\n                    backgroundColor: themes_1.themes.colors.background,\n                    borderRadius: 10,\n                    padding: 10,\n                    marginTop: 20,\n                } },\n                react_1.default.createElement(\"div\", { style: { color: 'white', fontWeight: 'bold', fontSize: 14 } }, \"Step 8\"),\n                react_1.default.createElement(\"div\", { style: { color: 'white' } }, \"Enter chairman name: This is the name of the director of the facility that issued the diploma\"))),\n        react_1.default.createElement(create_nft_elements_1.Wrapper, { style: {\n                backgroundColor: themes_1.themes.colors.background_box,\n                borderRadius: 15,\n                margin: 'auto',\n                width: '50%',\n                padding: 20,\n                marginBottom: 50,\n            } },\n            react_1.default.createElement(create_nft_elements_1.Title, { style: { color: 'white' } }, \"Create Dgree NFT\"),\n            react_1.default.createElement(create_nft_elements_1.Required, { style: { color: 'white' } },\n                react_1.default.createElement(create_nft_elements_1.RedIcon, { style: { color: 'white' } }, \"*\"),\n                \" Required fields\"),\n            react_1.default.createElement(create_nft_elements_1.BodyWrapper, null,\n                react_1.default.createElement(antd_1.Form, { name: 'basic', onFinish: onFinish, onFinishFailed: onFinishFailed, autoComplete: 'off' },\n                    react_1.default.createElement(create_nft_elements_1.FormWrapper, null,\n                        react_1.default.createElement(create_nft_elements_1.FormItem, null,\n                            react_1.default.createElement(antd_1.Form.Item, { name: 'image' },\n                                react_1.default.createElement(antd_1.Upload\n                                // action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                                , { \n                                    // action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                                    listType: 'picture-card', fileList: fileList, onPreview: handlePreview, onChange: handleChange, style: {\n                                        flexDirection: 'row',\n                                        justifyItems: 'center',\n                                        display: 'flex',\n                                    } }, fileList.length >= 8 ? null : uploadButton),\n                                react_1.default.createElement(antd_1.Modal, { visible: previewVisible, title: previewTitle, footer: null, onCancel: handleCancel, style: { width: 700, height: 400 } },\n                                    react_1.default.createElement(\"img\", { alt: 'example', style: {\n                                            width: '100%',\n                                            height: '100%',\n                                        }, src: previewImage })))),\n                        react_1.default.createElement(\"div\", { style: { color: 'white', fontSize: 14 } }, \"Name degree\"),\n                        react_1.default.createElement(antd_1.Form.Item, { name: 'name', rules: [{ required: true, message: 'Please input NFT name!' }] },\n                            react_1.default.createElement(antd_1.Input, { width: '100%', size: 'large', placeholder: 'Name of degree' })),\n                        react_1.default.createElement(\"div\", { style: { color: 'white', fontSize: 14 } }, \"Description\"),\n                        react_1.default.createElement(antd_1.Form.Item, { name: 'description' },\n                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Provide a detailed description of degree' })),\n                        react_1.default.createElement(\"div\", { style: { color: 'white', fontSize: 14 } }, \"Adress wallet\"),\n                        react_1.default.createElement(antd_1.Form.Item, { name: 'address' },\n                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Pass address wallet' })),\n                        react_1.default.createElement(\"div\", { style: {\n                                display: 'flex',\n                                flexDirection: 'row',\n                                justifyContent: 'space-between',\n                            } },\n                            react_1.default.createElement(antd_1.Form.Item, { name: 'category' },\n                                react_1.default.createElement(antd_1.Select, { defaultValue: 'Category', size: 'large', style: { width: 200, marginBottom: 20, borderRadius: 10 } },\n                                    react_1.default.createElement(Option, { value: '1' }, \"Diploma\"),\n                                    react_1.default.createElement(Option, { value: '2' }, \"Certificate\"),\n                                    react_1.default.createElement(Option, { value: '3' }, \"Merit\"))),\n                            react_1.default.createElement(antd_1.Form.Item, { name: 'school' },\n                                react_1.default.createElement(antd_1.Select, { defaultValue: 'School', size: 'large', style: { width: 200, marginBottom: 20, borderRadius: 10 } },\n                                    react_1.default.createElement(Option, { value: '1' }, \"FPT Polytechnic\"),\n                                    react_1.default.createElement(Option, { value: '2' }, \"FPT University\"),\n                                    react_1.default.createElement(Option, { value: '3' }, \"Uni of Greenwich\")))),\n                        react_1.default.createElement(\"div\", { style: { color: 'white', fontSize: 14 } }, \"Enter GPA\"),\n                        react_1.default.createElement(antd_1.Form.Item, { name: 'gpa' },\n                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Enter GPA' })),\n                        react_1.default.createElement(\"div\", { style: { color: 'white', fontSize: 14 } }, \"Enter name of chairman\"),\n                        react_1.default.createElement(antd_1.Form.Item, { name: 'chairman' },\n                            react_1.default.createElement(antd_1.Input, { size: 'large', placeholder: 'Name of chairman' })),\n                        react_1.default.createElement(create_nft_elements_1.FormItem, null,\n                            react_1.default.createElement(antd_1.Form.Item, null,\n                                react_1.default.createElement(antd_1.Button, { type: 'primary', htmlType: 'submit', size: 'large', style: { width: 200, marginTop: 20 } }, \"Submit\")))))))));\n}\nexports.default = (0, hooks_1.withContext)(CreateNft);\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Title = styled.div`\n    font-size: 40px;\n    font-weight: bold;\n    margin-bottom: 20px;\n`\n\nexport const Required = styled.div`\n    font-size: 14px;\n    margin-bottom: 20px;\n`\n\nexport const FormWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const RedIcon = styled.span`\n    color: red;\n`\n\nexport const BodyWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const FormItem = styled.div`\n    margin: auto;\n`\n\nexport const FormItemName = styled.div`\n    font-size: 16px;\n    font-weight: bold;\n`\n\nexport const FormItemDesc = styled.div`\n    font-size: 14px;\n    margin-bottom: 10px;\n`"],"names":[],"sourceRoot":""}